#!/bin/bash
function info(){ echo -e "[$(date +"%F %T")] [\e[36m\e[1mINFO\e[m] $@";};
function warn(){ echo -e "[$(date +"%F %T")] [\e[31m\e[5mWARN\e[m] $@";};
function fail(){ echo -e "[$(date +"%F %T")] [\e[35m\e[5mFAIL\e[m] $@";};

function update_package_repo(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);(apt-get update 2>/dev/null|grep -E "^(Hit|Get|Err|W|E|命中|忽略|错误):([0-9]+|)" &>$TMP_PATH/$filename&&info "apt update success.")||{ fail "apt update fail.";cat $TMP_PATH/$filename;exit 1;};};

function configs(){ if [ "$#" -gt 0 ];then local __config=$1;info "configuring system with $__config...";cat $__config|base64 -d|/bin/bash;info "$__config configured success.";else fail "permission denied.";exit 1;fi;};
function results(){ if [ "$#" -gt 0 ];then local __result=$1;else local __result=0;fi;if [[ ! -z $(npm -v 2>/dev/null) ]];then clean;else wash;fi;exit $__result;};
function supsctl(){ [[ -z $(supervisorctl -c /etc/supervisor/supervisord.conf status|grep -E "^(unix|error)") ]]||supervisord -c /etc/supervisor/supervisord.conf;if [ "$#" -gt 0 ];then supervisorctl -c /etc/supervisor/supervisord.conf $@;else supervisorctl -c /etc/supervisor/supervisord.conf status;fi;};

function user_clean(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};info "clean user cache...";if [ -d "/root" ];then ls -la /root|awk '{print($9)}'|grep -vE '^\.(\.|ssh|vimrc|gitconfig)?$'|awk '{if(!NF){next};cmd="rm -rf /root/"$NF;system(cmd)}';fi;find / -type f -name .bashrc 2>/dev/null|xargs rm -rf;};
function apt_clean(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};update_package_repo;filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);(apt autoremove -y 2>$TMP_PATH/$filename|grep -E "(After this operation|to remove)"&&apt autoclean -y &>$TMP_PATH/$filename&&apt clean -y &>$TMP_PATH/$filename&&info "apt clean success.")||{ fail "apt clean fail.";cat $TMP_PATH/$filename;exit 1;};};
function pip_clean(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};info "clean pip cache...";find / -name __pycache__ 2>/dev/null|xargs rm -rf;find / -name .ipynb_checkpoints 2>/dev/null|xargs rm -rf;if [ -d "/usr/local/share" ];then ls -la /usr/local/share|awk '{print($9)}'|grep -vE '^(\.|\.\.|jupyter|jupyterhub)$'|awk '{if(!NF){next};cmd="rm -rf /usr/local/share/"$NF;system(cmd)}';fi;};
function npm_clean(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);(npm cache clean -f &>$TMP_PATH/$filename&&info "npm clean success.")||{ fail "npm clean fail.";cat $TMP_PATH/$filename;exit 1;};};
function clean(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};rm -rf /humlog/supervisord.log* /humlog/dpkg.log* /humlog/alternatives.log*;user_clean;apt_clean;pip_clean;npm_clean;info "clean system cache...";if [ -d "/usr/share/doc" ];then ls -la /usr/share/doc|awk '{print($9)}'|grep -vE '^(\.|\.\.)$'|awk '{if(!NF){next};cmd="rm -rf /usr/share/doc/"$NF;system(cmd)}';fi;if [ -d "/var/tmp" ];then ls -la /var/tmp|awk '{print($9)}'|grep -vE '^(\.|\.\.)$'|awk '{if(!NF){next};cmd="rm -rf /var/tmp/"$NF;system(cmd)}';fi;if [ -d "/tmp" ];then ls -la /tmp|awk '{print($9)}'|grep -vE '^(\.|\.\.)$'|awk '{if(!NF){next};cmd="rm -rf /tmp/"$NF;system(cmd)}';fi;if [ -d "/go/pkg/mod/cache" ];then ls -la /go/pkg/mod/cache|awk '{print($9)}'|grep -vE '^(\.|\.\.)$'|awk '{if(!NF){next};cmd="rm -rf /go/pkg/mod/cache/"$NF;system(cmd)}';fi;if [ -d "/var/lib/apt/lists" ];then ls -la /var/lib/apt/lists|awk '{print($9)}'|grep -vE '^(\.|\.\.)$'|awk '{if(!NF){next};cmd="rm -rf /var/lib/apt/lists/"$NF;system(cmd)}';fi;if [ -d "/var/cache/apt" ];then ls -la /var/cache/apt|awk '{print($9)}'|grep -vE '^(\.|\.\.)$'|awk '{if(!NF){next};cmd="rm -rf /var/cache/apt/"$NF;system(cmd)}';fi;};
function wash(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};rm -rf /humlog/supervisord.log* /humlog/dpkg.log* /humlog/alternatives.log*;user_clean;apt_clean;pip_clean;info "clean system cache...";if [ -d "/usr/share/doc" ];then ls -la /usr/share/doc|awk '{print($9)}'|grep -vE '^(\.|\.\.)$'|awk '{if(!NF){next};cmd="rm -rf /usr/share/doc/"$NF;system(cmd)}';fi;if [ -d "/var/tmp" ];then ls -la /var/tmp|awk '{print($9)}'|grep -vE '^(\.|\.\.)$'|awk '{if(!NF){next};cmd="rm -rf /var/tmp/"$NF;system(cmd)}';fi;if [ -d "/tmp" ];then ls -la /tmp|awk '{print($9)}'|grep -vE '^(\.|\.\.)$'|awk '{if(!NF){next};cmd="rm -rf /tmp/"$NF;system(cmd)}';fi;if [ -d "/go/pkg/mod/cache" ];then ls -la /go/pkg/mod/cache|awk '{print($9)}'|grep -vE '^(\.|\.\.)$'|awk '{if(!NF){next};cmd="rm -rf /go/pkg/mod/cache/"$NF;system(cmd)}';fi;if [ -d "/var/lib/apt/lists" ];then ls -la /var/lib/apt/lists|awk '{print($9)}'|grep -vE '^(\.|\.\.)$'|awk '{if(!NF){next};cmd="rm -rf /var/lib/apt/lists/"$NF;system(cmd)}';fi;if [ -d "/var/cache/apt" ];then ls -la /var/cache/apt|awk '{print($9)}'|grep -vE '^(\.|\.\.)$'|awk '{if(!NF){next};cmd="rm -rf /var/cache/apt/"$NF;system(cmd)}';fi;};

function check_user(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};local __user=$1;if [[ ! -z $(cat /etc/passwd|awk -F ':' '{print $1}'|grep -P '^'$__user'$') ]];then echo $__user;fi;};
function check_group(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};local __group=$1;if [[ ! -z $(cat /etc/group|awk -F ':' '{print $1}'|grep -P '^'$__group'$') ]];then echo $__group;fi;};

function install_user(){ local __group=$1;local __name=$2;local __filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);[[ ! -z $(check_group $__group) ]]||{ (addgroup "$__group" &>$TMP_PATH/$__filename&&info "add group $__group success.")||{ fail "add group $__group fail.";cat $TMP_PATH/$__filename;exit 1;};};(useradd -s /bin/bash -m -g "$__group" "$__name" &>$TMP_PATH/$__filename&&info "add user $__name success.")||{ fail "add user $__name fail.";cat $TMP_PATH/$__filename;exit 1;};info "create user $__name success.";};
function install_sys_user(){ local __group=$1;local __name=$2;local __filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);[[ ! -z $(check_group $__group) ]]||{ (addgroup "$__group" &>$TMP_PATH/$__filename&&info "add group $__group success.")||{ fail "add group $__group fail.";cat $TMP_PATH/$__filename;exit 1;};};(useradd -s /bin/bash -m -d /var/lib/"$__name" -g "$__group" "$__name" &>$TMP_PATH/$__filename&&info "add user $__name success.")||{ fail "add user $__name fail.";cat $TMP_PATH/$__filename;exit 1;};info "create system user $__name success.";};
function install_exec_file_or_dir(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};local __name=$1;local __path=$2;local __exec=$3;local __rank=$4;local __rename=$5;[[ ! -z "$__rename" ]]||__rename=$1;update-alternatives --install $__exec/$__rename $__rename $__path/$__name $__rank;};
function purge_exec_file_or_dir(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};local __name=$1;[[ ! -z "$__name" ]]||read -p ' -> What is the exec file or dir want to remove? ' __name;update-alternatives --remove-all $__name;};

function install_apt_package(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};if [[ -n "$(dpkg --get-selections|grep -P '^'$1'(:amd64|:arm64)?\\s')" ]];then info "$1 is already installed. skipping...";else info "installing apt package $1...";filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);(apt install $1 -y --no-install-recommends &>$TMP_PATH/$filename&&info "$1 installed success.")||{ fail "$1 installed fail.";cat $TMP_PATH/$filename;exit 1;};fi;};
function install_apt_all_package(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};echo $1|awk '{for(i=1;i<=NF;i++){cmd="if [ -f /humsys/env ];then . /humsys/env;fi;if [ -f /humlib/extra.sh ];then . /humlib/extra.sh;fi;if [ -n \"$(dpkg --get-selections|grep -P '\''^'\''"$i"'\''(:amd64|:arm64)?\\s'\'')\" ];then info \""$i" is already installed. skipping...\";else info \"installing apt package "$i"...\";filename=$(head -c 500 /dev/urandom|md5sum|cut -d\" \" -f1);(apt install "$i" -y --no-install-recommends &>$TMP_PATH/$filename&&info \""$i" installed success.\")||{ fail \""$i" installed fail.\";cat $TMP_PATH/$filename;exit 1;};fi;";print cmd|"/bin/bash";}}';};
function purge_apt_package(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};if [[ ! -n "$(dpkg --get-selections|grep -P '^'$1'(:amd64|:arm64)?\\s')" ]];then info "$1 is not installed. skipping...";else info "purging $1...";filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);(apt purge $1 -y &>$TMP_PATH/$filename&&info "$1 purged success.")||{ fail "$1 purged fail.";cat $TMP_PATH/$filename;exit 1;};fi;};
function purge_apt_all_package(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};echo $1|awk '{for(i=1;i<=NF;i++){cmd="if [ -f /humsys/env ];then . /humsys/env;fi;if [ -f /humlib/extra.sh ];then . /humlib/extra.sh;fi;if [ ! -n \"$(dpkg --get-selections|grep -P '\''^'\''"$i"'\''(:amd64|:arm64)?\\s'\'')\" ];then info \""$i" is already purged. skipping...\";else info \"purging apt package "$i"...\";filename=$(head -c 500 /dev/urandom|md5sum|cut -d\" \" -f1);(apt purge "$i" -y &>$TMP_PATH/$filename&&info \""$i" purged success.\")||{ fail \""$i" purged fail.\";cat $TMP_PATH/$filename;exit 1;};fi;";print cmd|"/bin/bash";}}';};
function install_pip3_package(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};if [[ -n "$(pip3 list --format=columns|grep -P '^'$1'\s')" ]];then info "$1 is already installed. skipping...";else info "installing pip3 package $1...";filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);(pip3 install --upgrade --no-cache-dir $1 &>$TMP_PATH/$filename&&info "$1 installed success.")||{ fail "$1 installed fail.";cat $TMP_PATH/$filename;exit 1;};fi;};
function install_pip2_package(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};if [[ -n "$(pip2 list --format=columns|grep -P '^'$1'\s')" ]];then info "$1 is already installed. skipping...";else info "installing pip2 package $1...";filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);(pip2 install --upgrade --no-cache-dir $1 &>$TMP_PATH/$filename&&info "$1 installed success.")||{ fail "$1 installed fail.";cat $TMP_PATH/$filename;exit 1;};fi;};
function install_pip_package(){ install_pip3_package $@;};
function install_lab_package(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};info "installing jupyter labextension $1...";filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);(jupyter labextension install $1 --debug &>$TMP_PATH/$filename&&info "$1 installed success.")||{ fail "$1 installed fail.";cat $TMP_PATH/$filename;exit 1;};};
function install_npm_package(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};if [ ! -z "$(npm -g ls|grep -P '\s'$1'@')" ];then info "$1 is already installed. skipping...";else info "installing npm package $1...";filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);(npm install $1 -g --unsafe-perm &>$TMP_PATH/$filename&&info "$1 installed success.")||{ fail "$1 installed fail.";cat $TMP_PATH/$filename;exit 1;};fi;};
function install_gem_package(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};if [ ! -z "$(gem list --local|grep -P '^'$1'\s')" ];then info "$1 is already installed. skipping...";else info "installing gem package $1...";filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);(gem install $1 --no-document &>$TMP_PATH/$filename&&info "$1 installed success.")||{ fail "$1 installed fail.";cat $TMP_PATH/$filename;exit 1;};fi;};
function install_composer_package(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};if [ ! -z "$(php /usr/bin/composer show -i|grep -P '^'$1'$')" ];then info "$1 is already installed. skipping...";else info "installing composer package $1...";filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);(php /usr/local/bin/composer global require $1 &>$TMP_PATH/$filename&&info "$1 installed success.")||{ fail "$1 installed fail.";cat $TMP_PATH/$filename;exit 1;};fi;};
function install_go_package(){ [[ "root" == $(whoami) ]]||{ fail "permission denied.";exit 1;};info "installing go package $1...";filename=$(head -c 500 /dev/urandom|md5sum|cut -d" " -f1);(go get -u $1 &>$TMP_PATH/$filename&&info "$1 installed success.")||{ fail "$1 installed fail.";cat $TMP_PATH/$filename;exit 1;};};
